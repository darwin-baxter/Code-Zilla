Given an integer array nums, return an array answer such that answer[i] 
is equal to the product of all the elements of nums except nums[i].


class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n=nums.size();
        vector<int> left(n);
        vector<int> right(n);
        vector<int> output(n);
        left[0]=1;
        for(int i=1;i<n;i++)
        {
            left[i]=left[i-1]*nums[i-1];
        }
        right[n-1]=1;
        for(int i=n-2;i>=0;i--)
        {
            right[i]=right[i+1]*nums[i+1];
        }
        for(int i=0;i<n;i++)
        {
            output[i]=left[i]*right[i];
        }
        return output;
    }
};




class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n=nums.size();
        vector<int> output(n);
        output[0]=1;
        for(int i=1;i<n;i++)
        {
            output[i]=output[i-1]*nums[i-1];
        }
        int r=1;
        for(int i=n-1;i>=0;i--)
        {
            output[i]=output[i]*r;
            r=r*nums[i];
        }
        return output;
    }
};